* Re-Frame React Native TicTacToe
An example application for using React Native, Reagent and the re-frame application pattern to build a native Android application.

Based on the React Native TicTacToe example found [[https://github.com/facebook/react-native/tree/master/Examples/TicTacToe][here]].

** Main Features:
 * Uses [[https://github.com/adzerk-oss/boot-cljs][boot]] to script different build environments
 * Based on [[https://github.com/Day8/re-frame/][re-frame]] application pattern/library
 * Automatic rebuild and running of unit tests - =boot auto-test=
 * Live reload while developing (does not reset app state) - =boot dev=
 * Fast re-compilation (supports :optimizations :none) - =boot fast-build=
 * Fully playable, free 2 player tic-tac-toe game for your Android phone!
 
** Detailed Features 
 * Custom React Native Boot tasks to integrate ClojureScript build output with React Packager (allows React Packager to pick up and combine cljs output files, which allows for *much* faster compilation times)
 * Custom React Native Packager transformer that skips transformation for cljs output files, again increasing the performance of the compilation significantly
 * "Auto mocking" of React Native when testing - allows unit tests to run in browser environment
 * Interface agnostic app layer (tictactoe_app), which can also work with web based React or iOS if needed
 
** Running the application
*** Install React Native CLI
=npm -g react-native-cli=
*** Clone this repository
=git clone https://github.com/mjmeintjes/cljs-react-native-tictactoe.git=
*** Install React Native

#+BEGIN_SRC bash
    cd app
    npm i
    react-native android # Don't overwrite index.android.js or .gitignore
    react-native upgrade
#+END_SRC
*** Patch react-native transformer
We do this to speed up the packager, allowing it to skip transformation for any files built by ClojureScript builder.

This is a hack, and something that'll be fixed in the future.

=cd .. && ./patch-react-transformer=
*** Edit the build.boot file
Change :ws-host "matt-dev" to point to the hostname/ip of your development machine
*** Start the boot build
=boot auto-test=
*** Start the React Packager in a separate terminal
You'll have to have Android SDK installed for this step - [[https://facebook.github.io/react-native/docs/android-setup.html][see here for instructions]].
=(cd app && react-native run-android)= OR =(cd app && npm start)= if you have already installed the Android app
*** Run the app
 * Open Chrome browser, and navigate to http://localhost:8081/debugger-ui
 * On your Android device, press the hardware menu button (or shake the phone), and select "Debug in Chrome"
 * Place some Tic Tac Toe, against yourself, or a friend!
** Todo
 * Extract the boot tasks into their own project
 * Split out reagent-native into its own library
 * Split out reagent-native unit testing support into its own library
 * Remove the ugly hack that I currently use to choose between live reloading and fast build modes
 * Custom React Native transformer should be specified using command line arguments to the Packager server, and should just derive from the existing one (instead of copying all the code as it currently does.
 * Add deploy boot task to deploy apk with optimizations set to :simple
 * Add deploy boot task to deploy apk with optimizations set to :advanced? Not sure if this is even worth it.
 * Add support for iOS? Shouldn't be difficult, but without access to a Mac not possible at the moment?
** Acknowledgements/Resources
 * A lot of the work with regards to hot reloading came from [[https://github.com/decker405/figwheel-react-native][decker405]].
 * Also got a lot of info from [[https://github.com/mfikes/reagent-react-native/][mfikes]] and [[https://github.com/chendesheng/ReagentNativeDemo][chendesheng]].
 * [[http://cljsrn.org/][Here's]] another great resource with information about ClojureScript and React Native that helped a lot.
 * Several other projects here on GitHub that I can't find at the moment.
